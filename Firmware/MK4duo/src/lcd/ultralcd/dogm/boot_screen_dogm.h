/**
 * MK4duo Firmware for 3D Printer, Laser and CNC
 *
 * Based on Marlin, Sprinter and grbl
 * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
 * Copyright (C) 2013 Alberto Cotronei @MagoKimbra
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * Standard MK4duo Boot Screen bitmaps
 *
 */

#include <binary.h>

#include "../../../../MK4duo.h"

#if ENABLED(SHOW_BOOTSCREEN)

  #define START_BMPHIGH // Costs 399 bytes more flash

  #if ENABLED(SHOW_CUSTOM_BOOTSCREEN)

    #include "../../custom_bootscreen.h"

    #ifndef CUSTOM_BOOTSCREEN_TIMEOUT
      #define CUSTOM_BOOTSCREEN_TIMEOUT 2500
    #endif

  #endif

  #if ENABLED(START_BMPHIGH)

    #define START_BMPWIDTH      112

    const unsigned char start_bmp[] PROGMEM = {
      0x3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x1E,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x78,0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1C,0x70,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xE,0x60,0x0,0x0,0x0,0x0,0x30,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x6,0xE0,0x1F,0x7C,0x0,0x0,0x33,0x0,0x0,0x0,0x0,0x1,0x80,0x3,0x87,0xC0,0x3F,0xFE,0x0,0x0,0x33,0x0,0x0,0x0,0x0,0x1,0xC0,0x2,0x83,
      0xC0,0x73,0xCE,0x0,0x0,0x30,0x0,0x0,0x0,0x0,0x3,0xC0,0x3,0x83,0xC0,0xF3,0xCE,0x3C,0xF,0x33,0xF,0x0,0x0,0x0,0x3,0xC0,0x2,0x83,0xC0,0xE3,0x8E,0x7E,0x1F,0xB3,0x1F,0x80,0x0,0x0,0x1F,0xE0,0x0,0x3,0xC0,0xE3,0x8E,0xE7,0x39,0xB3,0x39,0xC0,0x0,0x0,0xFF,0xFC,0x3,0x83,0xC0,0xE3,0x8E,0xC3,0x31,0xB3,0x38,0xC0,0x0,0x0,0x3F,0xFF,0x2,0x3,0xC0,0xE3,0x8E,0xC3,0x30,0x33,0x38,0xC0,0x0,0x0,0x7,0xF0,0x2,0x3,0xC0,0xE3,0x8E,0xE3,0x30,0x33,0x38,0xC0,0x0,0x1,0x7,0xF0,0x3,0x83,0xC0,0xE3,0x8E,0xfb,0xF0,0x3F,0xF8,0xC0,0x0,0x3,0x83,0xF0,0x0,0x3,
      0xC0,0x63,0x8E,0x7B,0xF0,0x1F,0xF8,0xC0,0x0,0x7,0xC1,0xF8,0x0,0x3,0xC0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x9F,0xFE,0x0,0x3,0xC0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0x80,0x43,0xE0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7F,0xFF,0xF8,0xC3,0xF0,0x0,0x0,0x0,0x0,0x0,0x3,0x0,0x0,0x0,0x33,0xFF,0xFF,0xC3,0xF8,0x0,0x0,0x30,0xF0,0x0,0x3,0x0,0x0,0x0,0x19,0xFF,0xFF,0x83,0xFC,0x0,0x0,0x71,0xE6,0x0,0x3,0x0,0x0,0x0,0xC,0x7F,0xFF,0x3,0xFE,0x0,0x0,0x73,0xC6,0x0,0x3,0x0,0x0,0x0,0x6,0x7F,0xFF,0x3,
      0xFF,0x0,0x0,0x77,0x80,0x0,0x3,0x0,0x0,0x0,0x3,0x3F,0xFE,0x3,0xFF,0x80,0x0,0x7F,0x6,0x7F,0xE3,0xF0,0xF0,0xF0,0x1,0x9F,0xFC,0x3,0xFF,0xC0,0x0,0x7E,0x6,0xFF,0xF3,0xF9,0xF9,0xF8,0x0,0xCF,0xF8,0x3,0xFF,0xE0,0x0,0x7C,0x6,0xE7,0x33,0x9b,0x9b,0x9c,0x0,0x67,0xF0,0x3,0xFF,0xF0,0x0,0x7E,0x6,0xE3,0x1B,0x1B,0x1B,0xC,0x0,0x33,0xC0,0x3,0xFF,0xF8,0x0,0x7F,0x6,0xE3,0x1B,0x1B,0x3,0xC,0x0,0x19,0x0,0x3,0xFF,0xFC,0x0,0x73,0x86,0xE3,0x1B,0x3B,0x3,0x8c,0x0,0xC,0x0,0x3,0xFF,0xFE,0x0,0x71,0xC6,0xE3,0x1B,0xF3,0x3,0xEF,0x0,0x6,0x0,0x7,
      0xFF,0xFF,0x0,0x30,0xE6,0x63,0x19,0xE3,0x1,0xEF,0x0,0x2,0x0,0x6,0xFF,0xFF,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xE,0xFF,0xFF,0xC0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1C,0xFF,0xFF,0xE0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x78,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0
    };

  #else

    #define START_BMPWIDTH      56

    const unsigned char start_bmp[] PROGMEM = {
      0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x30,0x0,0x0,0x0,0x0,0x0,0x6,0x60,0x0,0x0,0x0,0x0,0x0,0x3,0xC3,0x60,0x5,0x0,0x0,0x8,0x1,0x84,0x90,0x4,0x0,0x0,0x18,0x1,0x84,0x97,0x75,0x70,0x0,0x3C,0x1,0x84,0x95,0x45,0x50,0x0,0x7F,0x1,0x84,0x95,0x45,0x50,0x0,0x1C,0x1,
      0x84,0x97,0xC5,0x50,0x1,0x8E,0x1,0x80,0x0,0x0,0x0,0x0,0xFF,0x81,0xC0,0x0,0x0,0x10,0x0,0x5F,0xF9,0xE0,0x2,0xD0,0x10,0x0,0x27,0xF1,0xF0,0x3,0x80,0x10,0x0,0x17,0xF1,0xF8,0x3,0x17,0xDE,0xEE,0xB,0xE1,0xFC,0x3,0x15,0x52,0x8A,0x5,0x81,0xFE,0x3,0x95,0x52,0x8A,0x2,0x1,
      0xFF,0x2,0xD5,0x5E,0x8F,0x1,0x1,0xFF,0x80,0x0,0x0,0x0,0x0,0x3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE
    };

  #endif

  #ifndef START_BMP_BYTEWIDTH
    #define START_BMP_BYTEWIDTH ((START_BMPWIDTH + 7) / 8)
  #endif
  #ifndef START_BMPHEIGHT
    #define START_BMPHEIGHT (sizeof(start_bmp) / (START_BMP_BYTEWIDTH))
  #endif

  static_assert(sizeof(start_bmp) == (START_BMP_BYTEWIDTH) * (START_BMPHEIGHT), "Bootscreen (start_bmp) dimensions don't match data.");

#endif

#ifndef CUSTOM_BOOTSCREEN_BMP_BYTEWIDTH
  #define CUSTOM_BOOTSCREEN_BMP_BYTEWIDTH ((CUSTOM_BOOTSCREEN_BMPWIDTH + 7) / 8)
#endif
#ifndef CUSTOM_BOOTSCREEN_BMPHEIGHT
  #define CUSTOM_BOOTSCREEN_BMPHEIGHT (sizeof(custom_start_bmp) / (CUSTOM_BOOTSCREEN_BMP_BYTEWIDTH))
#endif
